// GENERATED CODE - DO NOT MODIFY MANUALLY
// **************************************************************************
// Auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************

import 'package:example/src/model/test_model.dart' hide TestMode2;
import 'package:example/src/model/test_model1.dart' hide TestMode3;

import 'src/pages/main_page.dart';

const List<String> routeNames = <String>[
  '''flutterCandies://testPage' "B''',
  '''flutterCandies://testPage' "D''',
  'flutterCandies://testPageA',
  'flutterCandies://testPageC',
  'flutterCandies://testPageE',
  'fluttercandies://demogrouppage',
  'fluttercandies://mainpage',
];

class Routes {
  const Routes._();

  /// "This is test ' page B."
  ///
  /// [name] : '''flutterCandies://testPage' "B'''
  ///
  /// [routeName] : 'testPageB '
  ///
  /// [description] : "This is test ' page B."
  ///
  /// [constructors] :
  ///
  /// TestPageB : [String? argument]
  ///
  /// [showStatusBar] : true
  ///
  /// [pageRouteType] : PageRouteType.material
  ///
  /// [exts] : {group: Simple, order: 1}
  static const _FlutterCandiesTestPageB flutterCandiesTestPageB =
      _FlutterCandiesTestPageB();

  /// "This is test ' page D."
  ///
  /// [name] : '''flutterCandies://testPage' "D'''
  ///
  /// [routeName] : 'testPageD '
  ///
  /// [description] : "This is test ' page D."
  ///
  /// [constructors] :
  ///
  /// TestPageD : [String?(required) argument, bool? optional, String? id]
  ///
  /// TestPageD.another0 : [String?(required) argument]
  ///
  /// TestPageD.another1 : [String?(required) argument, bool? optional]
  ///
  /// TestPageD.another2 : [String?(required) argument]
  ///
  /// TestPageD.another3 : [String?(required) argument, bool? optional]
  ///
  /// [showStatusBar] : true
  ///
  /// [pageRouteType] : PageRouteType.material
  ///
  /// [exts] : {group: Complex, order: 0}
  static const _FlutterCandiesTestPageD flutterCandiesTestPageD =
      _FlutterCandiesTestPageD();

  /// 'This is test page A.'
  ///
  /// [name] : 'flutterCandies://testPageA'
  ///
  /// [routeName] : 'testPageA'
  ///
  /// [description] : 'This is test page A.'
  ///
  /// [exts] : {group: Simple, order: 0}
  static const String flutterCandiesTestPageA = 'flutterCandies://testPageA';

  /// 'This is test page c in other module.'
  ///
  /// [name] : 'flutterCandies://testPageC'
  ///
  /// [routeName] : 'testPageC'
  ///
  /// [description] : 'This is test page c in other module.'
  ///
  /// [exts] : {group: Simple, order: 2}
  static const String flutterCandiesTestPageC = 'flutterCandies://testPageC';

  /// 'Show how to push new page with arguments(class)'
  ///
  /// [name] : 'flutterCandies://testPageE'
  ///
  /// [routeName] : 'testPageE'
  ///
  /// [description] : 'Show how to push new page with arguments(class)'
  ///
  /// [constructors] :
  ///
  /// TestPageE : [TestMode? testMode, TestMode1? testMode1]
  ///
  /// TestPageE.test : []
  ///
  /// TestPageE.requiredC : [TestMode?(required) testMode]
  ///
  /// [exts] : {group: Complex, order: 1}
  static const _FlutterCandiesTestPageE flutterCandiesTestPageE =
      _FlutterCandiesTestPageE();

  /// 'DemoGroupPage'
  ///
  /// [name] : 'fluttercandies://demogrouppage'
  ///
  /// [routeName] : 'DemoGroupPage'
  ///
  /// [constructors] :
  ///
  /// DemoGroupPage : [MapEntry<String, List<DemoRouteResult>>(required) keyValue]
  static const _FluttercandiesDemogrouppage fluttercandiesDemogrouppage =
      _FluttercandiesDemogrouppage();

  /// 'MainPage'
  ///
  /// [name] : 'fluttercandies://mainpage'
  ///
  /// [routeName] : 'MainPage'
  ///
  /// [constructors] :
  ///
  /// MainPage : []
  static const String fluttercandiesMainpage = 'fluttercandies://mainpage';
}

class _FlutterCandiesTestPageB {
  const _FlutterCandiesTestPageB();

  String get name => '''flutterCandies://testPage' "B''';

  Map<String, dynamic> d({String? argument}) => <String, dynamic>{
        'argument': argument,
      };

  @override
  String toString() => name;
}

class _FlutterCandiesTestPageD {
  const _FlutterCandiesTestPageD();

  String get name => '''flutterCandies://testPage' "D''';

  Map<String, dynamic> d(String? argument,
          {bool? optional = false, String? id = 'flutterCandies'}) =>
      <String, dynamic>{
        'argument': argument,
        'optional': optional,
        'id': id,
      };

  Map<String, dynamic> another0({required String? argument}) =>
      <String, dynamic>{
        'argument': argument,
        'constructorName': 'another0',
      };

  Map<String, dynamic> another1(String? argument, [bool? optional = false]) =>
      <String, dynamic>{
        'argument': argument,
        'optional': optional,
        'constructorName': 'another1',
      };

  Map<String, dynamic> another2(String? argument) => <String, dynamic>{
        'argument': argument,
        'constructorName': 'another2',
      };

  Map<String, dynamic> another3(String? argument, {bool? optional}) =>
      <String, dynamic>{
        'argument': argument,
        'optional': optional,
        'constructorName': 'another3',
      };

  @override
  String toString() => name;
}

class _FlutterCandiesTestPageE {
  const _FlutterCandiesTestPageE();

  String get name => 'flutterCandies://testPageE';

  Map<String, dynamic> d(
          {TestMode? testMode = const TestMode(id: 2, isTest: false),
          TestMode1? testMode1}) =>
      <String, dynamic>{
        'testMode': testMode,
        'testMode1': testMode1,
      };

  Map<String, dynamic> test() => const <String, dynamic>{
        'constructorName': 'test',
      };

  Map<String, dynamic> requiredC({required TestMode? testMode}) =>
      <String, dynamic>{
        'testMode': testMode,
        'constructorName': 'requiredC',
      };

  @override
  String toString() => name;
}

class _FluttercandiesDemogrouppage {
  const _FluttercandiesDemogrouppage();

  String get name => 'fluttercandies://demogrouppage';

  Map<String, dynamic> d(
          {required MapEntry<String, List<DemoRouteResult>> keyValue}) =>
      <String, dynamic>{
        'keyValue': keyValue,
      };

  @override
  String toString() => name;
}
