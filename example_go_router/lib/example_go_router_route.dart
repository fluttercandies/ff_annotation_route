// GENERATED CODE - DO NOT MODIFY MANUALLY
// **************************************************************************
// Auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************
// fast mode: true
// **************************************************************************
// ignore_for_file: duplicate_import,implementation_imports,library_private_types_in_public_api,multiple_combinators,prefer_const_literals_to_create_immutables,unintended_html_in_doc_comment,unnecessary_import,unused_import,unused_local_variable,unused_shown_name,unnecessary_library_name,unnecessary_library_directive
import 'package:example_go_router/src/router/interceptors/interface.dart';
import 'package:example_go_router/src/router/interceptors/login_interceptor.dart';
import 'package:example_go_router/src/router/interceptors/permission_interceptor.dart';
import 'package:ff_annotation_route_library/ff_annotation_route_library.dart';
import 'package:flutter/widgets.dart';

import 'src/pages/home_page.dart';
import 'src/pages/login_page.dart';
import 'src/pages/page_a.dart';
import 'src/pages/page_b.dart';

/// The routeInterceptors auto generated by https://github.com/fluttercandies/ff_annotation_route
const Map<String, List<RouteInterceptor>> routeInterceptors =
    <String, List<RouteInterceptor>>{
  '/PageA': <RouteInterceptor>[LoginInterceptor()],
  '/PageB': <RouteInterceptor>[LoginInterceptor(), PermissionInterceptor()],
};

/// The routeInterceptorTypes auto generated by https://github.com/fluttercandies/ff_annotation_route
const Map<String, List<Type>> routeInterceptorTypes = <String, List<Type>>{
  '/PageA': <Type>[ILoginInterceptor],
  '/PageB': <Type>[ILoginInterceptor, IPermissionInterceptor],
};

/// Get route settings base on route name, auto generated by https://github.com/fluttercandies/ff_annotation_route
final List<FFGoRouterRouteSettings> goRouterRouteSettings =
    <FFGoRouterRouteSettings>[
  FFGoRouterRouteSettings(
    name: '/',
    builder: (Map<String, dynamic> safeArguments) => HomePage(
      key: asT<Key?>(
        safeArguments['key'],
      ),
    ),
    routeName: 'HomePage',
    description: 'HomePage',
  ),
  FFGoRouterRouteSettings(
    name: '/LoginPage',
    builder: (Map<String, dynamic> safeArguments) => LoginPage(
      key: asT<Key?>(
        safeArguments['key'],
      ),
    ),
    routeName: 'LoginPage',
    description: 'LoginPage',
  ),
  FFGoRouterRouteSettings(
    name: '/PageA',
    builder: (Map<String, dynamic> safeArguments) => PageA(
      key: asT<Key?>(
        safeArguments['key'],
      ),
    ),
    routeName: 'PageA',
    description: 'PageA',
  ),
  FFGoRouterRouteSettings(
    name: '/PageB',
    builder: (Map<String, dynamic> safeArguments) => PageB(
      key: asT<Key?>(
        safeArguments['key'],
      ),
    ),
    routeName: 'PageB',
    description: 'PageB',
  ),
];
